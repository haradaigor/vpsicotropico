
package vpsicotropico.service.sngpc.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "sngpc", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://sngpc.anvisa.gov.br/webservice/sngpc.asmx?WSDL")
public class Sngpc
    extends Service
{

    private final static URL SNGPC_WSDL_LOCATION;
    private final static WebServiceException SNGPC_EXCEPTION;
    private final static QName SNGPC_QNAME = new QName("http://tempuri.org/", "sngpc");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://sngpc.anvisa.gov.br/webservice/sngpc.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SNGPC_WSDL_LOCATION = url;
        SNGPC_EXCEPTION = e;
    }

    public Sngpc() {
        super(__getWsdlLocation(), SNGPC_QNAME);
    }

    public Sngpc(WebServiceFeature... features) {
        super(__getWsdlLocation(), SNGPC_QNAME, features);
    }

    public Sngpc(URL wsdlLocation) {
        super(wsdlLocation, SNGPC_QNAME);
    }

    public Sngpc(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SNGPC_QNAME, features);
    }

    public Sngpc(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Sngpc(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SngpcSoap
     */
    @WebEndpoint(name = "sngpcSoap")
    public SngpcSoap getSngpcSoap() {
        return super.getPort(new QName("http://tempuri.org/", "sngpcSoap"), SngpcSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SngpcSoap
     */
    @WebEndpoint(name = "sngpcSoap")
    public SngpcSoap getSngpcSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "sngpcSoap"), SngpcSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SNGPC_EXCEPTION!= null) {
            throw SNGPC_EXCEPTION;
        }
        return SNGPC_WSDL_LOCATION;
    }

}
